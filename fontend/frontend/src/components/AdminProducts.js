import React, { useState, useEffect } from "react";

const AdminAddProduct = () => {
  const [products, setProducts] = useState([]); // M·∫∑c ƒë·ªãnh l√† m·ªôt m·∫£ng r·ªóng
  const [newProduct, setNewProduct] = useState({ name: "", price: "" });

  // L·∫•y danh s√°ch s·∫£n ph·∫©m t·ª´ API
  useEffect(() => {
    fetch("http://localhost:5000/api/product")
      .then((res) => res.json())
      .then((data) => {
        if (Array.isArray(data)) {
          setProducts(data);
        } else {
          console.error("D·ªØ li·ªáu kh√¥ng ph·∫£i l√† m·∫£ng");
        }
      })
      .catch((err) => console.error("L·ªói khi l·∫•y s·∫£n ph·∫©m:", err));
  }, []);

  // H√†m th√™m s·∫£n ph·∫©m
  const handleAddProduct = async () => {
    if (!newProduct.name || !newProduct.price) {
      alert("Vui l√≤ng nh·∫≠p t√™n v√† gi√° s·∫£n ph·∫©m!");
      return;
    }

    try {
      const res = await fetch("http://localhost:5000/api/product", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(newProduct),
      });

      const data = await res.json();

      if (!res.ok) {
        throw new Error(data.error || "L·ªói khi th√™m s·∫£n ph·∫©m");
      }

      // C·∫≠p nh·∫≠t danh s√°ch s·∫£n ph·∫©m sau khi th√™m
      setProducts([...products, data.product]);
      setNewProduct({ name: "", price: "" });

      alert("Th√™m s·∫£n ph·∫©m th√†nh c√¥ng!");
    } catch (error) {
      console.error("L·ªói khi th√™m s·∫£n ph·∫©m:", error);
    }
  };

  // H√†m x√≥a s·∫£n ph·∫©m
  const handleDeleteProduct = async (id) => {
    const confirmDelete = window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·∫£n ph·∫©m n√†y?");
    if (!confirmDelete) return;

    try {
      const res = await fetch(`http://localhost:5000/api/product/${id}`, {
        method: "DELETE",
      });

      if (!res.ok) {
        throw new Error("L·ªói khi x√≥a s·∫£n ph·∫©m");
      }

      // C·∫≠p nh·∫≠t l·∫°i danh s√°ch s·∫£n ph·∫©m sau khi x√≥a
      setProducts(products.filter((product) => product.id !== id));

      alert("X√≥a s·∫£n ph·∫©m th√†nh c√¥ng!");
    } catch (error) {
      console.error("L·ªói khi x√≥a s·∫£n ph·∫©m:", error);
    }
  };

  return (
    <div>
      <h2>üìã Danh s√°ch s·∫£n ph·∫©m</h2>
      {products.length === 0 ? (
        <p>Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o.</p>
      ) : (
        <ul>
          {Array.isArray(products) &&
            products.map((product) => (
              <li key={product.id}>
                {product.name} - {product.price} VND
                <button onClick={() => handleDeleteProduct(product.id)}>X√≥a</button>
              </li>
            ))}
        </ul>
      )}

      <h3>‚ûï Th√™m s·∫£n ph·∫©m m·ªõi</h3>
      <input
        type="text"
        placeholder="T√™n s·∫£n ph·∫©m"
        value={newProduct.name}
        onChange={(e) => setNewProduct({ ...newProduct, name: e.target.value })}
      />
      <input
        type="number"
        placeholder="Gi√°"
        value={newProduct.price}
        onChange={(e) => setNewProduct({ ...newProduct, price: e.target.value })}
      />
      <button onClick={handleAddProduct}>Th√™m</button>
    </div>
  );
};

export default AdminAddProduct;
